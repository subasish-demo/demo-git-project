///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The RunSQLStatement recording.
    /// </summary>
    [TestModule("830cfb65-d857-40fa-b9bb-faafa252c4cc", ModuleType.Recording, 1)]
    public partial class RunSQLStatement : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static RunSQLStatement instance = new RunSQLStatement();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public RunSQLStatement()
        {
            varEmail = "ranorexrt@atsautomation.com";
            varSupplierPortalContactChecked = "1";
            varEngContactChecked = "1";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static RunSQLStatement Instance
        {
            get { return instance; }
        }

#region Variables

        string _varEmail;

        /// <summary>
        /// Gets or sets the value of variable varEmail.
        /// </summary>
        [TestVariable("17b3e33a-d66b-43d6-9937-0c0e8b8c4dd3")]
        public string varEmail
        {
            get { return _varEmail; }
            set { _varEmail = value; }
        }

        string _varSupplierPortalContactChecked;

        /// <summary>
        /// Gets or sets the value of variable varSupplierPortalContactChecked.
        /// </summary>
        [TestVariable("a2685b3f-317d-4f62-b996-d9d2c61c066c")]
        public string varSupplierPortalContactChecked
        {
            get { return _varSupplierPortalContactChecked; }
            set { _varSupplierPortalContactChecked = value; }
        }

        string _varEngContactChecked;

        /// <summary>
        /// Gets or sets the value of variable varEngContactChecked.
        /// </summary>
        [TestVariable("10ba3b2a-a380-4a57-9f53-f2497b79c65a")]
        public string varEngContactChecked
        {
            get { return _varEngContactChecked; }
            set { _varEngContactChecked = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            SPCollection.SQLUpdateSPDEV(varEmail, varSupplierPortalContactChecked, varEngContactChecked);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(1));
            Delay.Duration(3000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
