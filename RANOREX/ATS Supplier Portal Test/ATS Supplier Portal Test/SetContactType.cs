///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetContactType recording.
    /// </summary>
    [TestModule("6bf063b1-7775-4ffb-badc-0091db219b76", ModuleType.Recording, 1)]
    public partial class SetContactType : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static SetContactType instance = new SetContactType();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetContactType()
        {
            varUsername = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetContactType Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable varUsername.
        /// </summary>
        [TestVariable("7436e9b0-026b-4eef-a8da-b2fb0301ee25")]
        public string varUsername
        {
            get { return repo.varUsername; }
            set { repo.varUsername = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.VendorRequirements' at Center.", repo.MainWindow.NavigationPanel.VendorRequirementsInfo, new RecordItemIndex(0));
            repo.MainWindow.NavigationPanel.VendorRequirements.Click();
            Delay.Milliseconds(200);
            
            varUsername = GetListItemName();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.EngineeringContactDropDown' at Center.", repo.MainWindow.NavigationPanel.EngineeringContactDropDownInfo, new RecordItemIndex(2));
            repo.MainWindow.NavigationPanel.EngineeringContactDropDown.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating NotExists on item 'ATSSupplierPortalManagment.username'.", repo.ATSSupplierPortalManagment.usernameInfo, new RecordItemIndex(3));
            Validate.NotExists(repo.ATSSupplierPortalManagment.usernameInfo);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MainWindow.Self, false, new RecordItemIndex(4));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.EngineeringContactDropDown' at Center.", repo.MainWindow.NavigationPanel.EngineeringContactDropDownInfo, new RecordItemIndex(5));
            repo.MainWindow.NavigationPanel.EngineeringContactDropDown.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.EngineeringContactBackupDropDown' at Center.", repo.MainWindow.NavigationPanel.EngineeringContactBackupDropDownInfo, new RecordItemIndex(6));
            repo.MainWindow.NavigationPanel.EngineeringContactBackupDropDown.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating NotExists on item 'ATSSupplierPortalManagment.username'.", repo.ATSSupplierPortalManagment.usernameInfo, new RecordItemIndex(7));
            Validate.NotExists(repo.ATSSupplierPortalManagment.usernameInfo);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MainWindow.Self, false, new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.EngineeringContactBackupDropDown' at Center.", repo.MainWindow.NavigationPanel.EngineeringContactBackupDropDownInfo, new RecordItemIndex(9));
            repo.MainWindow.NavigationPanel.EngineeringContactBackupDropDown.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.Preferences' at Center.", repo.MainWindow.NavigationPanel.PreferencesInfo, new RecordItemIndex(10));
            repo.MainWindow.NavigationPanel.Preferences.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Checked to 'True' on item 'MainWindow.NavigationPanel.EngContact'.", repo.MainWindow.NavigationPanel.EngContactInfo, new RecordItemIndex(11));
            repo.MainWindow.NavigationPanel.EngContact.Element.SetAttributeValue("Checked", "True");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Set value", "Setting attribute Checked to 'True' on item 'MainWindow.NavigationPanel.EngContactDefault'.", repo.MainWindow.NavigationPanel.EngContactDefaultInfo, new RecordItemIndex(12));
            //repo.MainWindow.NavigationPanel.EngContactDefault.Element.SetAttributeValue("Checked", "True");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Set value", "Setting attribute Checked to 'True' on item 'MainWindow.NavigationPanel.EngBackupContact'.", repo.MainWindow.NavigationPanel.EngBackupContactInfo, new RecordItemIndex(13));
            //repo.MainWindow.NavigationPanel.EngBackupContact.Element.SetAttributeValue("Checked", "True");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.Save' at Center.", repo.MainWindow.NavigationPanel.SaveInfo, new RecordItemIndex(14));
            repo.MainWindow.NavigationPanel.Save.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'NotificationsWindow.SuccessfulMessage'", repo.NotificationsWindow.SuccessfulMessageInfo, new ActionTimeout(20000), new RecordItemIndex(15));
            repo.NotificationsWindow.SuccessfulMessageInfo.WaitForExists(20000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NotificationsWindow.CloseButton' at Center.", repo.NotificationsWindow.CloseButtonInfo, new RecordItemIndex(16));
            repo.NotificationsWindow.CloseButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(17));
            Delay.Duration(2000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
