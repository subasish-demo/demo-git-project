///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ExportImportPOPROD recording.
    /// </summary>
    [TestModule("dc65f510-3837-47ef-9bde-d0f94e928b3b", ModuleType.Recording, 1)]
    public partial class ExportImportPOPROD : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static ExportImportPOPROD instance = new ExportImportPOPROD();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ExportImportPOPROD()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ExportImportPOPROD Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            DeletePOExportIfExists();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'LoginATSSupplierPortal.BtnExportPOs'", repo.LoginATSSupplierPortal.BtnExportPOsInfo, new ActionTimeout(30000), new RecordItemIndex(1));
            repo.LoginATSSupplierPortal.BtnExportPOsInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(2));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.BtnExportPOs' at Center.", repo.LoginATSSupplierPortal.BtnExportPOsInfo, new RecordItemIndex(3));
            repo.LoginATSSupplierPortal.BtnExportPOs.Click();
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'VendorQuoteATSSupplierPortalInt.Options' at Center.", repo.VendorQuoteATSSupplierPortalInt.OptionsInfo, new RecordItemIndex(4));
            //repo.VendorQuoteATSSupplierPortalInt.Options.MoveTo();
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(5));
            //Delay.Duration(1000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VendorQuoteATSSupplierPortalInt.Options' at Center.", repo.VendorQuoteATSSupplierPortalInt.OptionsInfo, new RecordItemIndex(6));
            //repo.VendorQuoteATSSupplierPortalInt.Options.Click();
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Iexplore.SaveAs' at Center.", repo.Iexplore.SaveAsInfo, new RecordItemIndex(7));
            //repo.Iexplore.SaveAs.Click();
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '' on item 'SaveAs.FileName'.", repo.SaveAs.FileNameInfo, new RecordItemIndex(8));
            //repo.SaveAs.FileName.Element.SetAttributeValue("Text", "");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '\\\\ca01a9001\\pgmis\\Deployment_DEV\\Ranorex\\Supplier_Portal\\PROD\\ExportPO\\POExport.xlsx' on item 'SaveAs.FileName'.", repo.SaveAs.FileNameInfo, new RecordItemIndex(9));
            //repo.SaveAs.FileName.Element.SetAttributeValue("Text", "\\\\ca01a9001\\pgmis\\Deployment_DEV\\Ranorex\\Supplier_Portal\\PROD\\ExportPO\\POExport.xlsx");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SaveAs.FileName' at Center.", repo.SaveAs.FileNameInfo, new RecordItemIndex(10));
            repo.SaveAs.FileName.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}{Delete}'.", new RecordItemIndex(11));
            Keyboard.Press("{LControlKey down}{Akey}{LControlKey up}{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '\\\\ca01a9001\\pgmis\\Deployment_DEV\\Ranorex\\Supplier_Portal\\PROD\\ExportPO\\POExport.xlsx'.", new RecordItemIndex(12));
            Keyboard.Press("\\\\ca01a9001\\pgmis\\Deployment_DEV\\Ranorex\\Supplier_Portal\\PROD\\ExportPO\\POExport.xlsx");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SaveAs.FileName' at Center.", repo.SaveAs.FileNameInfo, new RecordItemIndex(13));
            repo.SaveAs.FileName.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SaveAs.ButtonSave' at Center.", repo.SaveAs.ButtonSaveInfo, new RecordItemIndex(14));
            repo.SaveAs.ButtonSave.Click();
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ConfirmSaveAs.ButtonYes' at Center.", repo.ConfirmSaveAs.ButtonYesInfo, new RecordItemIndex(15));
            //repo.ConfirmSaveAs.ButtonYes.Click();
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(16));
            Delay.Duration(2000, false);
            
            OpenDowloadedFile();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'VendorQuoteATSSupplierPortalInt.Open'", repo.VendorQuoteATSSupplierPortalInt.OpenInfo, new ActionTimeout(30000), new RecordItemIndex(18));
            //repo.VendorQuoteATSSupplierPortalInt.OpenInfo.WaitForExists(30000);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'VendorQuoteATSSupplierPortalInt.Open' at Center.", repo.VendorQuoteATSSupplierPortalInt.OpenInfo, new RecordItemIndex(19));
            //repo.VendorQuoteATSSupplierPortalInt.Open.MoveTo();
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(20));
            //Delay.Duration(1000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VendorQuoteATSSupplierPortalInt.Open' at Center.", repo.VendorQuoteATSSupplierPortalInt.OpenInfo, new RecordItemIndex(21));
            //repo.VendorQuoteATSSupplierPortalInt.Open.Click();
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'Excel.test.TopPaneTable.CellA1'", repo.Excel.test.TopPaneTable.CellA1Info, new ActionTimeout(120000), new RecordItemIndex(22));
            repo.Excel.test.TopPaneTable.CellA1Info.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Maximize() on item 'Excel'.", repo.Excel.SelfInfo, new RecordItemIndex(23));
            repo.Excel.Self.Maximize();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(24));
            Delay.Duration(2000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.Excel.Self, false, new RecordItemIndex(25));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(26));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.test.TopPaneTable.CellA1' at Center.", repo.Excel.test.TopPaneTable.CellA1Info, new RecordItemIndex(27));
            repo.Excel.test.TopPaneTable.CellA1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LMenu down}{Down}{LMenu up}'.", new RecordItemIndex(28));
            Keyboard.Press("{LMenu down}{Down}{LMenu up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}{Down}{Down}{Down}{Down}{Down}{Down}'.", new RecordItemIndex(29));
            Keyboard.Press("{Down}{Down}{Down}{Down}{Down}{Down}{Down}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Approved{Return}'.", new RecordItemIndex(30));
            Keyboard.Press("Approved{Return}");
            Delay.Milliseconds(0);
            
            // Delaying 5 seconds
            Report.Log(ReportLevel.Info, "Delay", "Delaying 5 seconds\r\nWaiting for 5s.", new RecordItemIndex(31));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.Excel.Self, false, new RecordItemIndex(32));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(33));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.test.TopPaneTable.CellA1' at Center.", repo.Excel.test.TopPaneTable.CellA1Info, new RecordItemIndex(34));
            repo.Excel.test.TopPaneTable.CellA1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}'.", new RecordItemIndex(35));
            Keyboard.Press("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Ckey}{LControlKey up}'.", new RecordItemIndex(36));
            Keyboard.Press("{LControlKey down}{Ckey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(37));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Minimize() on item 'Excel'.", repo.Excel.SelfInfo, new RecordItemIndex(38));
            repo.Excel.Self.Minimize();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Focus() on item 'LoginATSSupplierPortal.BtnImportPOs'.", repo.LoginATSSupplierPortal.BtnImportPOsInfo, new RecordItemIndex(39));
            repo.LoginATSSupplierPortal.BtnImportPOs.Focus();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.BtnImportPOs' at Center.", repo.LoginATSSupplierPortal.BtnImportPOsInfo, new RecordItemIndex(40));
            repo.LoginATSSupplierPortal.BtnImportPOs.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.PoPasteBucket' at Center.", repo.LoginATSSupplierPortal.PoPasteBucketInfo, new RecordItemIndex(41));
            repo.LoginATSSupplierPortal.PoPasteBucket.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Vkey}{LControlKey up}'.", new RecordItemIndex(42));
            Keyboard.Press("{LControlKey down}{Vkey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(43));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(44));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.Cancel' at Center.", repo.LoginATSSupplierPortal.CancelInfo, new RecordItemIndex(45));
            repo.LoginATSSupplierPortal.Cancel.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
