///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FilterRFQs recording.
    /// </summary>
    [TestModule("5d4c95f0-93d9-4f27-8aec-4f7988e434a9", ModuleType.Recording, 1)]
    public partial class FilterRFQs : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static FilterRFQs instance = new FilterRFQs();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FilterRFQs()
        {
            varNumRecords = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FilterRFQs Instance
        {
            get { return instance; }
        }

#region Variables

        string _varNumRecords;

        /// <summary>
        /// Gets or sets the value of variable varNumRecords.
        /// </summary>
        [TestVariable("4af29e3e-a729-4868-82b4-fd47d4dfda42")]
        public string varNumRecords
        {
            get { return _varNumRecords; }
            set { _varNumRecords = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 5m to exist. Associated repository item: 'LoginATSSupplierPortal.Search1'", repo.LoginATSSupplierPortal.Search1Info, new ActionTimeout(300000), new RecordItemIndex(0));
            repo.LoginATSSupplierPortal.Search1Info.WaitForExists(300000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 3m to not exist. Associated repository item: 'RFQListingATSSupplierPortal.Loading'", repo.RFQListingATSSupplierPortal.LoadingInfo, new ActionTimeout(180000), new RecordItemIndex(1));
            repo.RFQListingATSSupplierPortal.LoadingInfo.WaitForNotExists(180000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(2));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'LoginATSSupplierPortal.TblRfqsInfo'", repo.LoginATSSupplierPortal.TblRfqsInfoInfo, new ActionTimeout(30000), new RecordItemIndex(3));
            repo.LoginATSSupplierPortal.TblRfqsInfoInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(4));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'LoginATSSupplierPortal.TblRfqsInfo' and assigning the part of its value captured by '(?<=\\w+\\s\\d+\\sto\\s)\\d+' to variable 'varNumRecords'.", repo.LoginATSSupplierPortal.TblRfqsInfoInfo, new RecordItemIndex(5));
            varNumRecords = repo.LoginATSSupplierPortal.TblRfqsInfo.Element.GetAttributeValueText("InnerText", new Regex("(?<=\\w+\\s\\d+\\sto\\s)\\d+"));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageUp}{PageUp}{PageUp}'.", new RecordItemIndex(6));
            Keyboard.Press("{PageUp}{PageUp}{PageUp}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(7));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.DropDown' at Center.", repo.LoginATSSupplierPortal.DropDownInfo, new RecordItemIndex(8));
            repo.LoginATSSupplierPortal.DropDown.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageUp}{PageUp}{PageUp}'.", new RecordItemIndex(9));
            Keyboard.Press("{PageUp}{PageUp}{PageUp}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.OpenNotSubmitted1' at Center.", repo.LoginATSSupplierPortal.OpenNotSubmitted1Info, new RecordItemIndex(10));
            repo.LoginATSSupplierPortal.OpenNotSubmitted1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(11));
            Delay.Duration(2000, false);
            
            ValidateStatusColumn("Open");
            Delay.Milliseconds(0);
            
            ValidateSubmittedCheckBox(ValueConverter.ArgumentFromString<bool>("ischecked", "False"), "5");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot of Open/Not Submitted", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(14));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(15));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageUp}{PageUp}{PageUp}'.", new RecordItemIndex(16));
            Keyboard.Press("{PageUp}{PageUp}{PageUp}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(17));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.DropDown' at Center.", repo.LoginATSSupplierPortal.DropDownInfo, new RecordItemIndex(18));
            repo.LoginATSSupplierPortal.DropDown.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.OpenSubmitted' at Center.", repo.LoginATSSupplierPortal.OpenSubmittedInfo, new RecordItemIndex(19));
            repo.LoginATSSupplierPortal.OpenSubmitted.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(20));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'LoginATSSupplierPortal.TblRfqsInfo' and assigning the part of its value captured by '(?<=\\w+\\s\\d+\\sto\\s)\\d+' to variable 'varNumRecords'.", repo.LoginATSSupplierPortal.TblRfqsInfoInfo, new RecordItemIndex(21));
            varNumRecords = repo.LoginATSSupplierPortal.TblRfqsInfo.Element.GetAttributeValueText("InnerText", new Regex("(?<=\\w+\\s\\d+\\sto\\s)\\d+"));
            Delay.Milliseconds(0);
            
            ValidateStatusColumn("Open");
            Delay.Milliseconds(0);
            
            ValidateSubmittedCheckBox(ValueConverter.ArgumentFromString<bool>("ischecked", "True"), "5");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot of Open/Submitted", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(24));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(25));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageUp}{PageUp}{PageUp}'.", new RecordItemIndex(26));
            Keyboard.Press("{PageUp}{PageUp}{PageUp}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(27));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.OpenSubmitted1' at Center.", repo.LoginATSSupplierPortal.OpenSubmitted1Info, new RecordItemIndex(28));
            repo.LoginATSSupplierPortal.OpenSubmitted1.Click();
            Delay.Milliseconds(200);
            
            repo.LoginATSSupplierPortal.Won.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(30));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'LoginATSSupplierPortal.TblRfqsInfo' and assigning the part of its value captured by '(?<=\\w+\\s\\d+\\sto\\s)\\d+' to variable 'varNumRecords'.", repo.LoginATSSupplierPortal.TblRfqsInfoInfo, new RecordItemIndex(31));
            varNumRecords = repo.LoginATSSupplierPortal.TblRfqsInfo.Element.GetAttributeValueText("InnerText", new Regex("(?<=\\w+\\s\\d+\\sto\\s)\\d+"));
            Delay.Milliseconds(0);
            
            ValidateStatusColumn("Closed");
            Delay.Milliseconds(0);
            
            ValidateSubmittedCheckBox(ValueConverter.ArgumentFromString<bool>("ischecked", "True"), "5");
            Delay.Milliseconds(0);
            
            ValidateSubmittedCheckBox(ValueConverter.ArgumentFromString<bool>("ischecked", "True"), "10");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot of Won", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(35));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(36));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageUp}{PageUp}{PageUp}'.", new RecordItemIndex(37));
            Keyboard.Press("{PageUp}{PageUp}{PageUp}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(38));
            Delay.Duration(1000, false);
            
            repo.LoginATSSupplierPortal.SpanTagWon.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.Lost' at Center.", repo.LoginATSSupplierPortal.LostInfo, new RecordItemIndex(40));
            repo.LoginATSSupplierPortal.Lost.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(41));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'LoginATSSupplierPortal.TblRfqsInfo' and assigning the part of its value captured by '(?<=\\w+\\s\\d+\\sto\\s)\\d+' to variable 'varNumRecords'.", repo.LoginATSSupplierPortal.TblRfqsInfoInfo, new RecordItemIndex(42));
            varNumRecords = repo.LoginATSSupplierPortal.TblRfqsInfo.Element.GetAttributeValueText("InnerText", new Regex("(?<=\\w+\\s\\d+\\sto\\s)\\d+"));
            Delay.Milliseconds(0);
            
            ValidateStatusColumn("Closed");
            Delay.Milliseconds(0);
            
            //ValidateSubmittedCheckBox(ValueConverter.ArgumentFromString<bool>("ischecked", "True"), "5");
            //Delay.Milliseconds(0);
            
            ValidateSubmittedCheckBox(ValueConverter.ArgumentFromString<bool>("ischecked", "False"), "10");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot of Lost", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(46));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(47));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageUp}{PageUp}{PageUp}'.", new RecordItemIndex(48));
            Keyboard.Press("{PageUp}{PageUp}{PageUp}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(49));
            Delay.Duration(1000, false);
            
            repo.LoginATSSupplierPortal.Lost1.Click();
            Delay.Milliseconds(200);
            
            repo.LoginATSSupplierPortal.SpanTagAll.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(52));
            Delay.Duration(2000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot of All", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(53));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
