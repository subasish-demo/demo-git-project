///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ModifyRequiredDate recording.
    /// </summary>
    [TestModule("3cd66cc3-9f56-4d6e-ae24-11f88ca77489", ModuleType.Recording, 1)]
    public partial class ModifyRequiredDate : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static ModifyRequiredDate instance = new ModifyRequiredDate();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ModifyRequiredDate()
        {
            varDate = "";
            varcolumnIndex = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ModifyRequiredDate Instance
        {
            get { return instance; }
        }

#region Variables

        string _varDate;

        /// <summary>
        /// Gets or sets the value of variable varDate.
        /// </summary>
        [TestVariable("65e56779-9c1d-4c91-ba3c-16ebb592e872")]
        public string varDate
        {
            get { return _varDate; }
            set { _varDate = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varcolumnIndex.
        /// </summary>
        [TestVariable("ff69849a-2b36-4679-b987-ce0cdea1a975")]
        public string varcolumnIndex
        {
            get { return repo.varcolumnIndex; }
            set { repo.varcolumnIndex = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.CreateRFQ' at Center.", repo.MainWindow.NavigationPanel.CreateRFQInfo, new RecordItemIndex(0));
            repo.MainWindow.NavigationPanel.CreateRFQ.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to not exist. Associated repository item: 'MainWindow.BusyOverlay'", repo.MainWindow.BusyOverlayInfo, new ActionTimeout(60000), new RecordItemIndex(1));
            repo.MainWindow.BusyOverlayInfo.WaitForNotExists(60000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.DetailsInBatch' at Center.", repo.MainWindow.NavigationPanel.DetailsInBatchInfo, new RecordItemIndex(2));
            repo.MainWindow.NavigationPanel.DetailsInBatch.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '90000' on item 'MainWindow.NavigationPanel.UserReferenceFilter'.", repo.MainWindow.NavigationPanel.UserReferenceFilterInfo, new RecordItemIndex(3));
            repo.MainWindow.NavigationPanel.UserReferenceFilter.Element.SetAttributeValue("Text", "90000");
            Delay.Milliseconds(0);
            
            varDate = SPCollection.GetDateTimePlusXDays(ValueConverter.ArgumentFromString<int>("days", "15"));
            Delay.Milliseconds(0);
            
            varcolumnIndex = ValueConverter.ToString(SPCollection.GetColumnIndexofHeader("Required Date"));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '' on item 'MainWindow.NavigationPanel.ReqDateFirstRowTextBox'.", repo.MainWindow.NavigationPanel.ReqDateFirstRowTextBoxInfo, new RecordItemIndex(6));
            repo.MainWindow.NavigationPanel.ReqDateFirstRowTextBox.Element.SetAttributeValue("Text", "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.ReqDateFirstRowTextBox' at Center.", repo.MainWindow.NavigationPanel.ReqDateFirstRowTextBoxInfo, new RecordItemIndex(7));
            repo.MainWindow.NavigationPanel.ReqDateFirstRowTextBox.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varDate' with focus on 'MainWindow.NavigationPanel.ReqDateFirstRowTextBox'.", repo.MainWindow.NavigationPanel.ReqDateFirstRowTextBoxInfo, new RecordItemIndex(8));
            repo.MainWindow.NavigationPanel.ReqDateFirstRowTextBox.PressKeys(varDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$varDate) on item 'MainWindow.NavigationPanel.ReqDateFirstRowTextBox'.", repo.MainWindow.NavigationPanel.ReqDateFirstRowTextBoxInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.MainWindow.NavigationPanel.ReqDateFirstRowTextBoxInfo, "Text", varDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.calButtonFirstRow' at Center.", repo.MainWindow.NavigationPanel.calButtonFirstRowInfo, new RecordItemIndex(10));
            repo.MainWindow.NavigationPanel.calButtonFirstRow.Click();
            Delay.Milliseconds(200);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.ATSSupplierPortalManagment.SomeDateTime, false, new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.calButtonFirstRow' at Center.", repo.MainWindow.NavigationPanel.calButtonFirstRowInfo, new RecordItemIndex(12));
            repo.MainWindow.NavigationPanel.calButtonFirstRow.Click();
            Delay.Milliseconds(200);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MainWindow.NavigationPanel.ReqDateFirstRowTextBox, false, new RecordItemIndex(13));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MainWindow.NavigationPanel.tabPageList, false, new RecordItemIndex(14));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
