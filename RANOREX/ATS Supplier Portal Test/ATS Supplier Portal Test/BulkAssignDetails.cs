///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BulkAssignDetails recording.
    /// </summary>
    [TestModule("df699906-ff49-4e30-8ef7-99c8c0f1a6e9", ModuleType.Recording, 1)]
    public partial class BulkAssignDetails : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static BulkAssignDetails instance = new BulkAssignDetails();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BulkAssignDetails()
        {
            varRowCount = "0";
            varUserName = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BulkAssignDetails Instance
        {
            get { return instance; }
        }

#region Variables

        string _varRowCount;

        /// <summary>
        /// Gets or sets the value of variable varRowCount.
        /// </summary>
        [TestVariable("0b989cdb-1690-4211-b706-ca96d1f75032")]
        public string varRowCount
        {
            get { return _varRowCount; }
            set { _varRowCount = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varUserName.
        /// </summary>
        [TestVariable("904bbbda-178a-4b01-9d72-760dcec95e31")]
        public string varUserName
        {
            get { return repo.varUsername; }
            set { repo.varUsername = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.CreateRFQ' at Center.", repo.MainWindow.NavigationPanel.CreateRFQInfo, new RecordItemIndex(0));
            repo.MainWindow.NavigationPanel.CreateRFQ.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to not exist. Associated repository item: 'MainWindow.BusyOverlay'", repo.MainWindow.BusyOverlayInfo, new ActionTimeout(60000), new RecordItemIndex(1));
            repo.MainWindow.BusyOverlayInfo.WaitForNotExists(60000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.DetailsInBatch' at Center.", repo.MainWindow.NavigationPanel.DetailsInBatchInfo, new RecordItemIndex(2));
            repo.MainWindow.NavigationPanel.DetailsInBatch.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '90000' on item 'MainWindow.NavigationPanel.UserReferenceFilter'.", repo.MainWindow.NavigationPanel.UserReferenceFilterInfo, new RecordItemIndex(3));
            repo.MainWindow.NavigationPanel.UserReferenceFilter.Element.SetAttributeValue("Text", "90000");
            Delay.Milliseconds(0);
            
            varRowCount = ValueConverter.ToString(SPCollection.GetRowCountofTable());
            Delay.Milliseconds(0);
            
            SPCollection.SelectOddRows(ValueConverter.ArgumentFromString<int>("rCount", varRowCount));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.DetailsAssignDropDown' at Center.", repo.MainWindow.NavigationPanel.DetailsAssignDropDownInfo, new RecordItemIndex(6));
            repo.MainWindow.NavigationPanel.DetailsAssignDropDown.Click();
            Delay.Milliseconds(200);
            
            varUserName = SPCollection.GetUsername();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ATSSupplierPortalManagment.username' at Center.", repo.ATSSupplierPortalManagment.usernameInfo, new RecordItemIndex(8));
            repo.ATSSupplierPortalManagment.username.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.AssignButton' at Center.", repo.MainWindow.NavigationPanel.AssignButtonInfo, new RecordItemIndex(9));
            repo.MainWindow.NavigationPanel.AssignButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$varUserName) on item 'MainWindow.NavigationPanel.DetailsAssignText'.", repo.MainWindow.NavigationPanel.DetailsAssignTextInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.MainWindow.NavigationPanel.DetailsAssignTextInfo, "Text", varUserName);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MainWindow.NavigationPanel.DetailsAssignText, false, new RecordItemIndex(11));
            
            SPCollection.ValidateMultiSelectOddRows("Assignee", varUserName);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MainWindow.NavigationPanel.tabPageList, false, new RecordItemIndex(13));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.DetailsAssignDropDown' at Center.", repo.MainWindow.NavigationPanel.DetailsAssignDropDownInfo, new RecordItemIndex(14));
            repo.MainWindow.NavigationPanel.DetailsAssignDropDown.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ATSSupplierPortalManagment.AssigneeList.EmptyListItem' at Center.", repo.ATSSupplierPortalManagment.AssigneeList.EmptyListItemInfo, new RecordItemIndex(15));
            repo.ATSSupplierPortalManagment.AssigneeList.EmptyListItem.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.AssignButton' at Center.", repo.MainWindow.NavigationPanel.AssignButtonInfo, new RecordItemIndex(16));
            repo.MainWindow.NavigationPanel.AssignButton.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
