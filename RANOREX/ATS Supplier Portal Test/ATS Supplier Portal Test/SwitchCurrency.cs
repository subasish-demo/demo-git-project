///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SwitchCurrency recording.
    /// </summary>
    [TestModule("711ac0e5-3f55-434e-8b4d-7e0307bc059c", ModuleType.Recording, 1)]
    public partial class SwitchCurrency : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static SwitchCurrency instance = new SwitchCurrency();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SwitchCurrency()
        {
            varCurrency = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SwitchCurrency Instance
        {
            get { return instance; }
        }

#region Variables

        string _varCurrency;

        /// <summary>
        /// Gets or sets the value of variable varCurrency.
        /// </summary>
        [TestVariable("258290b8-bd33-45c8-a648-4470e1896062")]
        public string varCurrency
        {
            get { return _varCurrency; }
            set { _varCurrency = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.ProcessRFQButton' at Center.", repo.MainWindow.NavigationPanel.ProcessRFQButtonInfo, new RecordItemIndex(0));
            repo.MainWindow.NavigationPanel.ProcessRFQButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'MainWindow.BusyOverlay'", repo.MainWindow.BusyOverlayInfo, new ActionTimeout(30000), new RecordItemIndex(1));
            repo.MainWindow.BusyOverlayInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(2));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'MainWindow.NavigationPanel.Currency' and assigning its value to variable 'varCurrency'.", repo.MainWindow.NavigationPanel.CurrencyInfo, new RecordItemIndex(3));
            varCurrency = repo.MainWindow.NavigationPanel.Currency.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            TrimText();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.DetailViewDropDown' at Center.", repo.MainWindow.NavigationPanel.DetailViewDropDownInfo, new RecordItemIndex(5));
            repo.MainWindow.NavigationPanel.DetailViewDropDown.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ATSSupplierPortalManagment.All' at Center.", repo.ATSSupplierPortalManagment.AllInfo, new RecordItemIndex(6));
            repo.ATSSupplierPortalManagment.All.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.FirstListItem' at Center.", repo.MainWindow.NavigationPanel.FirstListItemInfo, new RecordItemIndex(7));
            repo.MainWindow.NavigationPanel.FirstListItem.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'MainWindow.BusyOverlay'", repo.MainWindow.BusyOverlayInfo, new ActionTimeout(30000), new RecordItemIndex(8));
            repo.MainWindow.BusyOverlayInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.Vendors' at Center.", repo.MainWindow.NavigationPanel.VendorsInfo, new RecordItemIndex(9));
            repo.MainWindow.NavigationPanel.Vendors.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.Preferences' at Center.", repo.MainWindow.NavigationPanel.PreferencesInfo, new RecordItemIndex(10));
            repo.MainWindow.NavigationPanel.Preferences.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$varCurrency) on item 'MainWindow.NavigationPanel.CurrencyComboBox'.", repo.MainWindow.NavigationPanel.CurrencyComboBoxInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.MainWindow.NavigationPanel.CurrencyComboBoxInfo, "Text", varCurrency);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.CurrencyComboBox' at Center.", repo.MainWindow.NavigationPanel.CurrencyComboBoxInfo, new RecordItemIndex(12));
            repo.MainWindow.NavigationPanel.CurrencyComboBox.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(13));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'ATSSupplierPortalManagment.ListItemCAD' at Center.", repo.ATSSupplierPortalManagment.ListItemCADInfo, new RecordItemIndex(14));
            repo.ATSSupplierPortalManagment.ListItemCAD.MoveTo();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ATSSupplierPortalManagment.ListItemCAD' at Center.", repo.ATSSupplierPortalManagment.ListItemCADInfo, new RecordItemIndex(15));
            repo.ATSSupplierPortalManagment.ListItemCAD.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(16));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.Save' at Center.", repo.MainWindow.NavigationPanel.SaveInfo, new RecordItemIndex(17));
            repo.MainWindow.NavigationPanel.Save.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'NotificationsWindow.SuccessfulMessage'", repo.NotificationsWindow.SuccessfulMessageInfo, new ActionTimeout(20000), new RecordItemIndex(18));
            repo.NotificationsWindow.SuccessfulMessageInfo.WaitForExists(20000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='CAD') on item 'MainWindow.NavigationPanel.CellCAD'.", repo.MainWindow.NavigationPanel.CellCADInfo, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.MainWindow.NavigationPanel.CellCADInfo, "Text", "CAD");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'CAD') on item 'MainWindow.NavigationPanel.Currency'.", repo.MainWindow.NavigationPanel.CurrencyInfo, new RecordItemIndex(20));
            Validate.AttributeContains(repo.MainWindow.NavigationPanel.CurrencyInfo, "Text", "CAD");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MainWindow.NavigationPanel.SomeTabPageList, false, new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.Preferences' at Center.", repo.MainWindow.NavigationPanel.PreferencesInfo, new RecordItemIndex(22));
            repo.MainWindow.NavigationPanel.Preferences.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.CurrencyComboBox' at Center.", repo.MainWindow.NavigationPanel.CurrencyComboBoxInfo, new RecordItemIndex(23));
            repo.MainWindow.NavigationPanel.CurrencyComboBox.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ATSSupplierPortalManagment.USD' at Center.", repo.ATSSupplierPortalManagment.USDInfo, new RecordItemIndex(24));
            repo.ATSSupplierPortalManagment.USD.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.Save' at Center.", repo.MainWindow.NavigationPanel.SaveInfo, new RecordItemIndex(25));
            repo.MainWindow.NavigationPanel.Save.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'NotificationsWindow.SuccessfulMessage'", repo.NotificationsWindow.SuccessfulMessageInfo, new ActionTimeout(20000), new RecordItemIndex(26));
            repo.NotificationsWindow.SuccessfulMessageInfo.WaitForExists(20000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'USD') on item 'MainWindow.NavigationPanel.Currency'.", repo.MainWindow.NavigationPanel.CurrencyInfo, new RecordItemIndex(27));
            Validate.AttributeContains(repo.MainWindow.NavigationPanel.CurrencyInfo, "Text", "USD");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
