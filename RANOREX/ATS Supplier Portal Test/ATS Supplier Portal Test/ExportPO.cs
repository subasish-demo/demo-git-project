///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ExportPO recording.
    /// </summary>
    [TestModule("b9f9d6a3-26b9-49bf-a8d5-b14c1039982e", ModuleType.Recording, 1)]
    public partial class ExportPO : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static ExportPO instance = new ExportPO();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ExportPO()
        {
            varLineNumberofFirstLineExcel = "1.00";
            varFuturePromisDate = "08/11/1982";
            varPastPromisDate = "";
            varNewNote = "default";
            varRandomStringAsDate = "";
            varOrderNumber = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ExportPO Instance
        {
            get { return instance; }
        }

#region Variables

        string _varLineNumberofFirstLineExcel;

        /// <summary>
        /// Gets or sets the value of variable varLineNumberofFirstLineExcel.
        /// </summary>
        [TestVariable("6af42f8a-5dfc-40cc-aaf0-0e758fe2d026")]
        public string varLineNumberofFirstLineExcel
        {
            get { return _varLineNumberofFirstLineExcel; }
            set { _varLineNumberofFirstLineExcel = value; }
        }

        string _varFuturePromisDate;

        /// <summary>
        /// Gets or sets the value of variable varFuturePromisDate.
        /// </summary>
        [TestVariable("aca102bf-2edf-4a12-8933-266afdc9223e")]
        public string varFuturePromisDate
        {
            get { return _varFuturePromisDate; }
            set { _varFuturePromisDate = value; }
        }

        string _varPastPromisDate;

        /// <summary>
        /// Gets or sets the value of variable varPastPromisDate.
        /// </summary>
        [TestVariable("68bdfe28-302c-45e6-9341-cb3e52598ee8")]
        public string varPastPromisDate
        {
            get { return _varPastPromisDate; }
            set { _varPastPromisDate = value; }
        }

        string _varNewNote;

        /// <summary>
        /// Gets or sets the value of variable varNewNote.
        /// </summary>
        [TestVariable("9136181b-d596-4590-ab42-16aa9497f9f5")]
        public string varNewNote
        {
            get { return _varNewNote; }
            set { _varNewNote = value; }
        }

        string _varRandomStringAsDate;

        /// <summary>
        /// Gets or sets the value of variable varRandomStringAsDate.
        /// </summary>
        [TestVariable("c2d848c0-1f8f-435d-a241-f0ef043e1d38")]
        public string varRandomStringAsDate
        {
            get { return _varRandomStringAsDate; }
            set { _varRandomStringAsDate = value; }
        }

        string _varOrderNumber;

        /// <summary>
        /// Gets or sets the value of variable varOrderNumber.
        /// </summary>
        [TestVariable("cc105f4d-3e90-434c-9a4f-3df45c3a03cf")]
        public string varOrderNumber
        {
            get { return _varOrderNumber; }
            set { _varOrderNumber = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'LoginATSSupplierPortal.BtnExportPOs'", repo.LoginATSSupplierPortal.BtnExportPOsInfo, new ActionTimeout(30000), new RecordItemIndex(0));
            repo.LoginATSSupplierPortal.BtnExportPOsInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(1));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.BtnExportPOs' at Center.", repo.LoginATSSupplierPortal.BtnExportPOsInfo, new RecordItemIndex(2));
            repo.LoginATSSupplierPortal.BtnExportPOs.Click();
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'VendorQuoteATSSupplierPortalInt.Options' at Center.", repo.VendorQuoteATSSupplierPortalInt.OptionsInfo, new RecordItemIndex(3));
            //repo.VendorQuoteATSSupplierPortalInt.Options.MoveTo();
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(4));
            //Delay.Duration(1000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VendorQuoteATSSupplierPortalInt.Options' at Center.", repo.VendorQuoteATSSupplierPortalInt.OptionsInfo, new RecordItemIndex(5));
            //repo.VendorQuoteATSSupplierPortalInt.Options.Click();
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Iexplore.SaveAs' at Center.", repo.Iexplore.SaveAsInfo, new RecordItemIndex(6));
            //repo.Iexplore.SaveAs.Click();
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '' on item 'SaveAs.FileName'.", repo.SaveAs.FileNameInfo, new RecordItemIndex(7));
            //repo.SaveAs.FileName.Element.SetAttributeValue("Text", "");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '\\\\ca01a9001\\pgmis\\Deployment_DEV\\Ranorex\\Supplier_Portal\\Web\\POExport\\POExport.xlsx' on item 'SaveAs.FileName'.", repo.SaveAs.FileNameInfo, new RecordItemIndex(8));
            //repo.SaveAs.FileName.Element.SetAttributeValue("Text", "\\\\ca01a9001\\pgmis\\Deployment_DEV\\Ranorex\\Supplier_Portal\\Web\\POExport\\POExport.xlsx");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SaveAs.FileName' at Center.", repo.SaveAs.FileNameInfo, new RecordItemIndex(9));
            repo.SaveAs.FileName.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}{Delete}'.", new RecordItemIndex(10));
            Keyboard.Press("{LControlKey down}{Akey}{LControlKey up}{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '\\\\ca01a9001\\pgmis\\Deployment_DEV\\Ranorex\\Supplier_Portal\\Web\\POExport\\POExport.xlsx'.", new RecordItemIndex(11));
            Keyboard.Press("\\\\ca01a9001\\pgmis\\Deployment_DEV\\Ranorex\\Supplier_Portal\\Web\\POExport\\POExport.xlsx");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SaveAs.FileName' at Center.", repo.SaveAs.FileNameInfo, new RecordItemIndex(12));
            repo.SaveAs.FileName.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SaveAs.ButtonSave' at Center.", repo.SaveAs.ButtonSaveInfo, new RecordItemIndex(13));
            repo.SaveAs.ButtonSave.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ConfirmSaveAs.ButtonYes' at Center.", repo.ConfirmSaveAs.ButtonYesInfo, new RecordItemIndex(14));
            repo.ConfirmSaveAs.ButtonYes.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(15));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'VendorQuoteATSSupplierPortalInt.Open'", repo.VendorQuoteATSSupplierPortalInt.OpenInfo, new ActionTimeout(30000), new RecordItemIndex(16));
            repo.VendorQuoteATSSupplierPortalInt.OpenInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'VendorQuoteATSSupplierPortalInt.Open' at Center.", repo.VendorQuoteATSSupplierPortalInt.OpenInfo, new RecordItemIndex(17));
            repo.VendorQuoteATSSupplierPortalInt.Open.MoveTo();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(18));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VendorQuoteATSSupplierPortalInt.Open' at Center.", repo.VendorQuoteATSSupplierPortalInt.OpenInfo, new RecordItemIndex(19));
            repo.VendorQuoteATSSupplierPortalInt.Open.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'Excel.test.TopPaneTable.CellA1'", repo.Excel.test.TopPaneTable.CellA1Info, new ActionTimeout(120000), new RecordItemIndex(20));
            repo.Excel.test.TopPaneTable.CellA1Info.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Maximize() on item 'Excel'.", repo.Excel.SelfInfo, new RecordItemIndex(21));
            repo.Excel.Self.Maximize();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.test.TopPaneTable.CellA1' at Center.", repo.Excel.test.TopPaneTable.CellA1Info, new RecordItemIndex(22));
            repo.Excel.test.TopPaneTable.CellA1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LMenu down}{Down}{LMenu up}'.", new RecordItemIndex(23));
            Keyboard.Press("{LMenu down}{Down}{LMenu up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(24));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'e'.", new RecordItemIndex(25));
            Keyboard.Press("e");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Pending{Return}'.", new RecordItemIndex(26));
            Keyboard.Press("Pending{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.test.BottomPaneTable.Row3' at Center.", repo.Excel.test.BottomPaneTable.Row3Info, new RecordItemIndex(27));
            repo.Excel.test.BottomPaneTable.Row3.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{LShiftKey down}{End}{LShiftKey up}{LControlKey up}'.", new RecordItemIndex(28));
            Keyboard.Press("{LControlKey down}{LShiftKey down}{End}{LShiftKey up}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}'.", new RecordItemIndex(29));
            Keyboard.Press("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageUp}{PageUp}{PageUp}'.", new RecordItemIndex(30));
            Keyboard.Press("{PageUp}{PageUp}{PageUp}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.test.TopPaneTable.SelectAll' at Center.", repo.Excel.test.TopPaneTable.SelectAllInfo, new RecordItemIndex(31));
            repo.Excel.test.TopPaneTable.SelectAll.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Ckey}{LControlKey up}'.", new RecordItemIndex(32));
            Keyboard.Press("{LControlKey down}{Ckey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LShiftKey down}{F11}{LShiftKey up}'.", new RecordItemIndex(33));
            Keyboard.Press("{LShiftKey down}{F11}{LShiftKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Vkey}{LControlKey up}'.", new RecordItemIndex(34));
            Keyboard.Press("{LControlKey down}{Vkey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'Excel.Sheet1.TableSheet1.CellA1'", repo.Excel.Sheet1.TableSheet1.CellA1Info, new ActionTimeout(60000), new RecordItemIndex(35));
            repo.Excel.Sheet1.TableSheet1.CellA1Info.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'Excel.Sheet1.TableSheet1.CellE2_LineNumberFirstLine' and assigning its value to variable 'varLineNumberofFirstLineExcel'.", repo.Excel.Sheet1.TableSheet1.CellE2_LineNumberFirstLineInfo, new RecordItemIndex(36));
            varLineNumberofFirstLineExcel = repo.Excel.Sheet1.TableSheet1.CellE2_LineNumberFirstLine.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'Excel.Sheet1.TableSheet1.CellD2_OrderNumberFirstLine' and assigning its value to variable 'varOrderNumber'.", repo.Excel.Sheet1.TableSheet1.CellD2_OrderNumberFirstLineInfo, new RecordItemIndex(37));
            varOrderNumber = repo.Excel.Sheet1.TableSheet1.CellD2_OrderNumberFirstLine.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            varFuturePromisDate = SPCollection.GetDateTimePlusXDays(ValueConverter.ArgumentFromString<int>("days", "30"));
            Delay.Milliseconds(0);
            
            varPastPromisDate = SPCollection.GetDateTimePlusXDays(ValueConverter.ArgumentFromString<int>("days", "-30"));
            Delay.Milliseconds(0);
            
            varNewNote = FormatNote();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.Sheet1.TableSheet1.CellO2_PromiseDateFirstLine' at Center.", repo.Excel.Sheet1.TableSheet1.CellO2_PromiseDateFirstLineInfo, new RecordItemIndex(41));
            repo.Excel.Sheet1.TableSheet1.CellO2_PromiseDateFirstLine.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}' with focus on 'Excel.Sheet1.TableSheet1.CellO2_PromiseDateFirstLine'.", repo.Excel.Sheet1.TableSheet1.CellO2_PromiseDateFirstLineInfo, new RecordItemIndex(42));
            repo.Excel.Sheet1.TableSheet1.CellO2_PromiseDateFirstLine.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varFuturePromisDate' with focus on 'Excel.Sheet1.TableSheet1.CellO2_PromiseDateFirstLine'.", repo.Excel.Sheet1.TableSheet1.CellO2_PromiseDateFirstLineInfo, new RecordItemIndex(43));
            repo.Excel.Sheet1.TableSheet1.CellO2_PromiseDateFirstLine.PressKeys(varFuturePromisDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.Sheet1.TableSheet1.CellQ2_NoteFirstLine' at Center.", repo.Excel.Sheet1.TableSheet1.CellQ2_NoteFirstLineInfo, new RecordItemIndex(44));
            repo.Excel.Sheet1.TableSheet1.CellQ2_NoteFirstLine.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}' with focus on 'Excel.Sheet1.TableSheet1.CellQ2_NoteFirstLine'.", repo.Excel.Sheet1.TableSheet1.CellQ2_NoteFirstLineInfo, new RecordItemIndex(45));
            repo.Excel.Sheet1.TableSheet1.CellQ2_NoteFirstLine.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varNewNote' with focus on 'Excel.Sheet1.TableSheet1.CellQ2_NoteFirstLine'.", repo.Excel.Sheet1.TableSheet1.CellQ2_NoteFirstLineInfo, new RecordItemIndex(46));
            repo.Excel.Sheet1.TableSheet1.CellQ2_NoteFirstLine.PressKeys(varNewNote);
            Delay.Milliseconds(0);
            
            varRandomStringAsDate = SPCollection.RandomString(ValueConverter.ArgumentFromString<int>("length", "8"));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.Sheet1.TableSheet1.CellO3_PromiseDateSecondLine' at Center.", repo.Excel.Sheet1.TableSheet1.CellO3_PromiseDateSecondLineInfo, new RecordItemIndex(48));
            repo.Excel.Sheet1.TableSheet1.CellO3_PromiseDateSecondLine.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}' with focus on 'Excel.Sheet1.TableSheet1.CellO3_PromiseDateSecondLine'.", repo.Excel.Sheet1.TableSheet1.CellO3_PromiseDateSecondLineInfo, new RecordItemIndex(49));
            repo.Excel.Sheet1.TableSheet1.CellO3_PromiseDateSecondLine.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varRandomStringAsDate' with focus on 'Excel.Sheet1.TableSheet1.CellO3_PromiseDateSecondLine'.", repo.Excel.Sheet1.TableSheet1.CellO3_PromiseDateSecondLineInfo, new RecordItemIndex(50));
            repo.Excel.Sheet1.TableSheet1.CellO3_PromiseDateSecondLine.PressKeys(varRandomStringAsDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.Sheet1.TableSheet1.CellO4_PromiseDateThirdLine' at Center.", repo.Excel.Sheet1.TableSheet1.CellO4_PromiseDateThirdLineInfo, new RecordItemIndex(51));
            repo.Excel.Sheet1.TableSheet1.CellO4_PromiseDateThirdLine.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}' with focus on 'Excel.Sheet1.TableSheet1.CellO4_PromiseDateThirdLine'.", repo.Excel.Sheet1.TableSheet1.CellO4_PromiseDateThirdLineInfo, new RecordItemIndex(52));
            repo.Excel.Sheet1.TableSheet1.CellO4_PromiseDateThirdLine.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varPastPromisDate' with focus on 'Excel.Sheet1.TableSheet1.CellO4_PromiseDateThirdLine'.", repo.Excel.Sheet1.TableSheet1.CellO4_PromiseDateThirdLineInfo, new RecordItemIndex(53));
            repo.Excel.Sheet1.TableSheet1.CellO4_PromiseDateThirdLine.PressKeys(varPastPromisDate);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.Excel.Self, false, new RecordItemIndex(54));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(55));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.Sheet1.TableSheet1.CellA1' at Center.", repo.Excel.Sheet1.TableSheet1.CellA1Info, new RecordItemIndex(56));
            repo.Excel.Sheet1.TableSheet1.CellA1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}'.", new RecordItemIndex(57));
            Keyboard.Press("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Ckey}{LControlKey up}'.", new RecordItemIndex(58));
            Keyboard.Press("{LControlKey down}{Ckey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(59));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Minimize() on item 'Excel'.", repo.Excel.SelfInfo, new RecordItemIndex(60));
            repo.Excel.Self.Minimize();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Focus() on item 'LoginATSSupplierPortal.BtnImportPOs'.", repo.LoginATSSupplierPortal.BtnImportPOsInfo, new RecordItemIndex(61));
            repo.LoginATSSupplierPortal.BtnImportPOs.Focus();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.BtnImportPOs' at Center.", repo.LoginATSSupplierPortal.BtnImportPOsInfo, new RecordItemIndex(62));
            repo.LoginATSSupplierPortal.BtnImportPOs.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.PoPasteBucket' at Center.", repo.LoginATSSupplierPortal.PoPasteBucketInfo, new RecordItemIndex(63));
            repo.LoginATSSupplierPortal.PoPasteBucket.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Vkey}{LControlKey up}'.", new RecordItemIndex(64));
            Keyboard.Press("{LControlKey down}{Vkey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(65));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(66));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>'Promise date must be in a valid format and be after') on item 'LoginATSSupplierPortal.ImportPOWarning'.", repo.LoginATSSupplierPortal.ImportPOWarningInfo, new RecordItemIndex(67));
            Validate.AttributeContains(repo.LoginATSSupplierPortal.ImportPOWarningInfo, "InnerText", "Promise date must be in a valid format and be after");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.ImportPOButton' at Center.", repo.LoginATSSupplierPortal.ImportPOButtonInfo, new RecordItemIndex(68));
            repo.LoginATSSupplierPortal.ImportPOButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(69));
            Delay.Duration(10000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(70));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.DropDownPO' at Center.", repo.LoginATSSupplierPortal.DropDownPOInfo, new RecordItemIndex(71));
            repo.LoginATSSupplierPortal.DropDownPO.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.All' at Center.", repo.LoginATSSupplierPortal.AllInfo, new RecordItemIndex(72));
            repo.LoginATSSupplierPortal.All.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageDown}{PageDown}{PageDown}'.", new RecordItemIndex(73));
            Keyboard.Press("{PageDown}{PageDown}{PageDown}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.Search1' at Center.", repo.LoginATSSupplierPortal.Search1Info, new RecordItemIndex(74));
            repo.LoginATSSupplierPortal.Search1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varOrderNumber' with focus on 'LoginATSSupplierPortal.Search1'.", repo.LoginATSSupplierPortal.Search1Info, new RecordItemIndex(75));
            repo.LoginATSSupplierPortal.Search1.PressKeys(varOrderNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.OrderNumberRow0' at Center.", repo.LoginATSSupplierPortal.OrderNumberRow0Info, new RecordItemIndex(76));
            repo.LoginATSSupplierPortal.OrderNumberRow0.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(77));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'LoginATSSupplierPortal.H4TagQuote'", repo.LoginATSSupplierPortal.H4TagQuoteInfo, new ActionTimeout(30000), new RecordItemIndex(78));
            repo.LoginATSSupplierPortal.H4TagQuoteInfo.WaitForExists(30000);
            
            ValidatePOChanges();
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(80));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(81));
            Delay.Duration(1000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
