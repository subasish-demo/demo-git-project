///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidatingWeb recording.
    /// </summary>
    [TestModule("c8651c19-b093-43b9-903c-1ec2ee5f8225", ModuleType.Recording, 1)]
    public partial class ValidatingWeb : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static ValidatingWeb instance = new ValidatingWeb();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidatingWeb()
        {
            varDate = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidatingWeb Instance
        {
            get { return instance; }
        }

#region Variables

        string _varDate;

        /// <summary>
        /// Gets or sets the value of variable varDate.
        /// </summary>
        [TestVariable("05d49e41-380d-47c1-bb17-9a97978a6bda")]
        public string varDate
        {
            get { return _varDate; }
            set { _varDate = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varDetailPrice.
        /// </summary>
        [TestVariable("66b92e19-5faf-4d0e-a0b1-36e7d2570648")]
        public string varDetailPrice
        {
            get { return repo.varDetailPrice; }
            set { repo.varDetailPrice = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RFQListingATSSupplierPortal.PromiseDateText' at Center.", repo.RFQListingATSSupplierPortal.PromiseDateTextInfo, new RecordItemIndex(0));
            repo.RFQListingATSSupplierPortal.PromiseDateText.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Right}{Right}{Right}{PageUp}{PageUp}{PageUp}'.", new RecordItemIndex(1));
            Keyboard.Press("{Right}{Right}{Right}{PageUp}{PageUp}{PageUp}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'LoginATSSupplierPortal.BtnSubmit' at Center.", repo.LoginATSSupplierPortal.BtnSubmitInfo, new RecordItemIndex(2));
            repo.LoginATSSupplierPortal.BtnSubmit.MoveTo();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(3));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.BtnSubmit' at Center.", repo.LoginATSSupplierPortal.BtnSubmitInfo, new RecordItemIndex(4));
            repo.LoginATSSupplierPortal.BtnSubmit.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'LoginATSSupplierPortal.QuoteNotSubmitted'", repo.LoginATSSupplierPortal.QuoteNotSubmittedInfo, new ActionTimeout(30000), new RecordItemIndex(5));
            repo.LoginATSSupplierPortal.QuoteNotSubmittedInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'LoginATSSupplierPortal.QuoteNotSubmitted'.", repo.LoginATSSupplierPortal.QuoteNotSubmittedInfo, new RecordItemIndex(6));
            Validate.Exists(repo.LoginATSSupplierPortal.QuoteNotSubmittedInfo);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.LoginATSSupplierPortal.QuoteNotSubmitted, false, new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.DetailPrice' at Center.", repo.LoginATSSupplierPortal.DetailPriceInfo, new RecordItemIndex(8));
            repo.LoginATSSupplierPortal.DetailPrice.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '-' with focus on 'LoginATSSupplierPortal.DetailPrice'.", repo.LoginATSSupplierPortal.DetailPriceInfo, new RecordItemIndex(9));
            repo.LoginATSSupplierPortal.DetailPrice.PressKeys("-");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(10));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1'.", new RecordItemIndex(11));
            Keyboard.Press("1");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RFQListingATSSupplierPortal.PromiseDateText' at Center.", repo.RFQListingATSSupplierPortal.PromiseDateTextInfo, new RecordItemIndex(12));
            repo.RFQListingATSSupplierPortal.PromiseDateText.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Right}{Right}{Right}{PageUp}{PageUp}{PageUp}'.", new RecordItemIndex(13));
            Keyboard.Press("{Right}{Right}{Right}{PageUp}{PageUp}{PageUp}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.BtnSubmit' at Center.", repo.LoginATSSupplierPortal.BtnSubmitInfo, new RecordItemIndex(14));
            repo.LoginATSSupplierPortal.BtnSubmit.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'LoginATSSupplierPortal.CostError'.", repo.LoginATSSupplierPortal.CostErrorInfo, new RecordItemIndex(15));
            Validate.Exists(repo.LoginATSSupplierPortal.CostErrorInfo);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.LoginATSSupplierPortal.CostError, false, new RecordItemIndex(16));
            
            //Report.Log(ReportLevel.Info, "Set value", "Setting attribute InnerText to '' on item 'LoginATSSupplierPortal.DetailPrice'.", repo.LoginATSSupplierPortal.DetailPriceInfo, new RecordItemIndex(17));
            //repo.LoginATSSupplierPortal.DetailPrice.Element.SetAttributeValue("InnerText", "");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.DetailPrice' at Center.", repo.LoginATSSupplierPortal.DetailPriceInfo, new RecordItemIndex(18));
            //repo.LoginATSSupplierPortal.DetailPrice.Click();
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'ff' with focus on 'LoginATSSupplierPortal.DetailPrice'.", repo.LoginATSSupplierPortal.DetailPriceInfo, new RecordItemIndex(19));
            //repo.LoginATSSupplierPortal.DetailPrice.PressKeys("ff");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.RFQNumber' at Center.", repo.LoginATSSupplierPortal.RFQNumberInfo, new RecordItemIndex(20));
            //repo.LoginATSSupplierPortal.RFQNumber.Click();
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Right}{Right}{Right}'.", new RecordItemIndex(21));
            //Keyboard.Press("{Right}{Right}{Right}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.BtnSubmit' at Center.", repo.LoginATSSupplierPortal.BtnSubmitInfo, new RecordItemIndex(22));
            //repo.LoginATSSupplierPortal.BtnSubmit.Click();
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'LoginATSSupplierPortal.TxtEachPriceError'.", repo.LoginATSSupplierPortal.TxtEachPriceErrorInfo, new RecordItemIndex(23));
            //Validate.Exists(repo.LoginATSSupplierPortal.TxtEachPriceErrorInfo);
            //Delay.Milliseconds(0);
            
            //Report.Screenshot(ReportLevel.Info, "User", "", repo.LoginATSSupplierPortal.TxtEachPriceError, false, new RecordItemIndex(24));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.DetailPrice' at Center.", repo.LoginATSSupplierPortal.DetailPriceInfo, new RecordItemIndex(25));
            repo.LoginATSSupplierPortal.DetailPrice.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}{Delete}'.", new RecordItemIndex(26));
            Keyboard.Press("{LControlKey down}{Akey}{LControlKey up}{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1.00' with focus on 'LoginATSSupplierPortal.DetailPrice'.", repo.LoginATSSupplierPortal.DetailPriceInfo, new RecordItemIndex(27));
            repo.LoginATSSupplierPortal.DetailPrice.PressKeys("1.00");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RFQListingATSSupplierPortal.PromiseDateText' at Center.", repo.RFQListingATSSupplierPortal.PromiseDateTextInfo, new RecordItemIndex(28));
            repo.RFQListingATSSupplierPortal.PromiseDateText.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Right}{Right}{Right}{PageUp}{PageUp}{PageUp}'.", new RecordItemIndex(29));
            Keyboard.Press("{Right}{Right}{Right}{PageUp}{PageUp}{PageUp}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.BtnSubmit' at Center.", repo.LoginATSSupplierPortal.BtnSubmitInfo, new RecordItemIndex(30));
            repo.LoginATSSupplierPortal.BtnSubmit.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'LoginATSSupplierPortal.QuoteNotSubmittedPromise'", repo.LoginATSSupplierPortal.QuoteNotSubmittedPromiseInfo, new ActionTimeout(30000), new RecordItemIndex(31));
            repo.LoginATSSupplierPortal.QuoteNotSubmittedPromiseInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'LoginATSSupplierPortal.QuoteNotSubmittedPromise'.", repo.LoginATSSupplierPortal.QuoteNotSubmittedPromiseInfo, new RecordItemIndex(32));
            Validate.Exists(repo.LoginATSSupplierPortal.QuoteNotSubmittedPromiseInfo);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.LoginATSSupplierPortal.QuoteNotSubmittedPromise, false, new RecordItemIndex(33));
            
            varDate = SPCollection.GetDateTimePlusXDays(ValueConverter.ArgumentFromString<int>("days", "-365"));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.InputTag0Promised' at Center.", repo.LoginATSSupplierPortal.InputTag0PromisedInfo, new RecordItemIndex(35));
            repo.LoginATSSupplierPortal.InputTag0Promised.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}{Delete}'.", new RecordItemIndex(36));
            Keyboard.Press("{LControlKey down}{Akey}{LControlKey up}{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varDate'.", new RecordItemIndex(37));
            Keyboard.Press(varDate);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RFQListingATSSupplierPortal.PromiseDateText' at Center.", repo.RFQListingATSSupplierPortal.PromiseDateTextInfo, new RecordItemIndex(38));
            repo.RFQListingATSSupplierPortal.PromiseDateText.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Right}{Right}{Right}{PageUp}{PageUp}{PageUp}'.", new RecordItemIndex(39));
            Keyboard.Press("{Right}{Right}{Right}{PageUp}{PageUp}{PageUp}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.BtnSubmit' at Center.", repo.LoginATSSupplierPortal.BtnSubmitInfo, new RecordItemIndex(40));
            repo.LoginATSSupplierPortal.BtnSubmit.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'LoginATSSupplierPortal.PromiseDateMustBeAFutureDate'.", repo.LoginATSSupplierPortal.PromiseDateMustBeAFutureDateInfo, new RecordItemIndex(41));
            Validate.Exists(repo.LoginATSSupplierPortal.PromiseDateMustBeAFutureDateInfo);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.LoginATSSupplierPortal.PromiseDateMustBeAFutureDate, false, new RecordItemIndex(42));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.DetailPrice' at Center.", repo.LoginATSSupplierPortal.DetailPriceInfo, new RecordItemIndex(43));
            repo.LoginATSSupplierPortal.DetailPrice.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}{Delete}' with focus on 'LoginATSSupplierPortal.DetailPrice'.", repo.LoginATSSupplierPortal.DetailPriceInfo, new RecordItemIndex(44));
            repo.LoginATSSupplierPortal.DetailPrice.PressKeys("{LControlKey down}{Akey}{LControlKey up}{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RFQListingATSSupplierPortal.PromiseDateText' at Center.", repo.RFQListingATSSupplierPortal.PromiseDateTextInfo, new RecordItemIndex(45));
            repo.RFQListingATSSupplierPortal.PromiseDateText.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.DivTagSuppl' at Center.", repo.LoginATSSupplierPortal.DivTagSupplInfo, new RecordItemIndex(46));
            repo.LoginATSSupplierPortal.DivTagSuppl.Click();
            Delay.Milliseconds(200);
            
            //SPCollection.GetSS();
            //Delay.Milliseconds(0);
            
            //SPCollection.RunOCRCogServ("Portal");
            //Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
