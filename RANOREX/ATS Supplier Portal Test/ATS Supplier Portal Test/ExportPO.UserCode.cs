///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace ATS_Supplier_Portal_Test
{
    public partial class ExportPO
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public string FormatNote()
        {
        	return "Time Created: " + System.DateTime.Now.ToShortTimeString() + " Import PO Note";
        }

        public void ValidatePOChanges()
        {
            WebDocument webDoc = "/dom[@domain='ca10a2061.atsna.atsauto.net']";
			var webTable = webDoc.FindSingle(".//table[#'openPOsTable']");
			var LineNoDouble = Convert.ToDecimal(varLineNumberofFirstLineExcel);
			var LineNoInt = Convert.ToInt32(LineNoDouble);
			var LineNominus1 = LineNoInt - 	1;
			var LineNoMinus1String = LineNominus1.ToString();
			var LineNoString = LineNoInt.ToString();
			Ranorex.InputTag PromiseDateTag = webTable.FindSingle("./tbody/tr[" + LineNoString + "]/td[15]/input[@name='[" + LineNoMinus1String + "].PromiseDate']").As<Ranorex.InputTag>();
			Ranorex.InputTag NoteTag = webTable.FindSingle("./tbody/tr[" + LineNoString + "]/td[18]/input[@name='[" + LineNoMinus1String + "].Notes']").As<Ranorex.InputTag>();
			Report.Info("Promise Date Tag Value: " + ATS_Supplier_Portal_Test.SPCollection.ConvertDate(PromiseDateTag.TagValue.ToString()));
			Report.Info("Future promise date: " + varFuturePromisDate);
			Ranorex.Validate.IsTrue(varFuturePromisDate == ATS_Supplier_Portal_Test.SPCollection.ConvertDate(PromiseDateTag.TagValue.ToString()), "Validating the Promise Date is set to new promise date: " + varFuturePromisDate + ".  The validation @ValidateRESULT@!");
			Ranorex.Validate.IsTrue(varNewNote == NoteTag.TagValue.ToString(), "Validating Notes field is set to new note: " + varNewNote + ".  The validation @ValidateRESULT@!");
        }

    }
}
