///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SubmitSingleQuotePROD recording.
    /// </summary>
    [TestModule("5224d7ab-926b-4165-8599-33093bc24b53", ModuleType.Recording, 1)]
    public partial class SubmitSingleQuotePROD : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static SubmitSingleQuotePROD instance = new SubmitSingleQuotePROD();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SubmitSingleQuotePROD()
        {
            varPromiseDate = "08/19/20";
            varUnitPrice = "6.9500";
            varNote = "This is Note number: 2 時車愛6";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SubmitSingleQuotePROD Instance
        {
            get { return instance; }
        }

#region Variables

        string _varPromiseDate;

        /// <summary>
        /// Gets or sets the value of variable varPromiseDate.
        /// </summary>
        [TestVariable("1c5363db-d60a-4822-b1d1-685b061387d2")]
        public string varPromiseDate
        {
            get { return _varPromiseDate; }
            set { _varPromiseDate = value; }
        }

        string _varUnitPrice;

        /// <summary>
        /// Gets or sets the value of variable varUnitPrice.
        /// </summary>
        [TestVariable("6a504690-bc96-4b87-bdf9-14435eeeaf7b")]
        public string varUnitPrice
        {
            get { return _varUnitPrice; }
            set { _varUnitPrice = value; }
        }

        string _varNote;

        /// <summary>
        /// Gets or sets the value of variable varNote.
        /// </summary>
        [TestVariable("724a818a-6484-4b14-a547-fc3209f62782")]
        public string varNote
        {
            get { return _varNote; }
            set { _varNote = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$varUnitPrice) on item 'LoginATSSupplierPortal.TxtEachPrice'.", repo.LoginATSSupplierPortal.TxtEachPriceInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.LoginATSSupplierPortal.TxtEachPriceInfo, "TagValue", varUnitPrice);
            Delay.Milliseconds(0);
            
            varPromiseDate = SPCollection.ConvertDateYYYY(varPromiseDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$varPromiseDate) on item 'LoginATSSupplierPortal.InputTag0Promised'.", repo.LoginATSSupplierPortal.InputTag0PromisedInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.LoginATSSupplierPortal.InputTag0PromisedInfo, "TagValue", varPromiseDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$varNote) on item 'LoginATSSupplierPortal.NoteRow0'.", repo.LoginATSSupplierPortal.NoteRow0Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.LoginATSSupplierPortal.NoteRow0Info, "InnerText", varNote);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.BtnSave' at Center.", repo.LoginATSSupplierPortal.BtnSaveInfo, new RecordItemIndex(4));
            repo.LoginATSSupplierPortal.BtnSave.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'LoginATSSupplierPortal.LblNotify'", repo.LoginATSSupplierPortal.LblNotifyInfo, new ActionTimeout(30000), new RecordItemIndex(5));
            repo.LoginATSSupplierPortal.LblNotifyInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'LoginATSSupplierPortal.BtnSubmit' at Center.", repo.LoginATSSupplierPortal.BtnSubmitInfo, new RecordItemIndex(6));
            repo.LoginATSSupplierPortal.BtnSubmit.MoveTo();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.CurrencyTag' at Center.", repo.LoginATSSupplierPortal.CurrencyTagInfo, new RecordItemIndex(7));
            repo.LoginATSSupplierPortal.CurrencyTag.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageUp}{PageUp}{PageUp}{Right}{Right}{Right}'.", new RecordItemIndex(8));
            Keyboard.Press("{PageUp}{PageUp}{PageUp}{Right}{Right}{Right}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.BtnSubmit' at Center.", repo.LoginATSSupplierPortal.BtnSubmitInfo, new RecordItemIndex(9));
            repo.LoginATSSupplierPortal.BtnSubmit.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'LoginATSSupplierPortal.LblNotify'", repo.LoginATSSupplierPortal.LblNotifyInfo, new ActionTimeout(30000), new RecordItemIndex(10));
            repo.LoginATSSupplierPortal.LblNotifyInfo.WaitForExists(30000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(11));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
