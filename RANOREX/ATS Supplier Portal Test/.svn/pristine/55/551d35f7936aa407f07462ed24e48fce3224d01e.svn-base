///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace ATS_Supplier_Portal_Test
{
    public partial class CreateRFQforSelectWinner
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void GetOrderNumber(string buyerNumber, string DetailNumber, string UserRefNumber, string Quantity)
        {
        	try 
        	{
	        	var userName = "BSSV-SP";
        		var xmlFilePath = @"\\ca01a9001\pgmis\Deployment_DEV\Ranorex\Supplier_Portal\JDE\SQLLedgerTableResultsCreatRFQ.xml";
        		var QtyConverted = Convert.ToDecimal(Quantity) * 1000;
	        	var QtyConvertedInt = Convert.ToInt32(QtyConverted);
	        	Report.Info("Waiting 5 seconds");
	        	Delay.Seconds(5.0);
	        	Report.Info("Querying F4311 to get order number and line number for given Detail Number, User Reference Number, and Quantity for buyer number: " + buyerNumber);
	        	var TableResultsF4311 = SPCollection.SQLQueryJDEF4311(buyerNumber, DetailNumber, UserRefNumber, QtyConvertedInt.ToString());
	        	Report.Info("Waiting 5 seconds, and then querying JDE Ledger table with returned order number and line number");
	        	Delay.Seconds(5.0);
	        	var lineNumber = TableResultsF4311.Rows[0][1].ToString();
	        	var orderNumber = TableResultsF4311.Rows[0][0].ToString();
	        	Report.Info("Returned Order Number from Query of F4311: " + orderNumber + " Returned Line ID from query: " + lineNumber);
	        	var table = SPCollection.SQLQueryJDEDevLedgerTable(TableResultsF4311.Rows[0][0].ToString(), TableResultsF4311.Rows[0][1].ToString(), userName);
	        	table.WriteXml(xmlFilePath);
        		Report.Info("Querying JDE ledger table F43199 with Ordernumber: " + orderNumber + " and linenumber: " + lineNumber + " to see if user: " + userName + " has entries for buyernumber: " + buyerNumber + " for today's date");
        		Report.Info("Wrote SQL Query results to xml file: " + xmlFilePath + ".  Please see results there if any errors.");
        		Ranorex.Validate.IsTrue(table.Rows[0][0].ToString().Contains(userName), "Validating the JDE ledger table F43199 contains username: " + userName + " for this line item.  The validation @ValidateRESULT@!");
        		var todaysDate = System.DateTime.Today.ToString("MM-dd-yyyy");
        		Ranorex.Validate.IsTrue(todaysDate == table.Rows[0][1].ToString(), "Validating the date created entry of the line item in the JDE ledger table F43199 is today's date, date created: " + table.Rows[0][1].ToString() + ".  The Validation @ValidateRESULT@!");
        		Ranorex.Validate.IsTrue(buyerNumber == table.Rows[0][2].ToString(), "Validating the buyer number of the JDE ledger table F43199 line item is " + buyerNumber + ".  The validation @ValidateRESULT@!");
        	} 
        	catch (Exception) 
        	{
        		
        		throw;
        	}
        	
        }

    }
}
