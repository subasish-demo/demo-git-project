///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SelectWinners recording.
    /// </summary>
    [TestModule("2fd1b956-1634-423b-a5e3-454b7992359c", ModuleType.Recording, 1)]
    public partial class SelectWinners : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static SelectWinners instance = new SelectWinners();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SelectWinners()
        {
            varADsupplier = "";
            varATSsupplier = "";
            varNewRFQNumber = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SelectWinners Instance
        {
            get { return instance; }
        }

#region Variables

        string _varADsupplier;

        /// <summary>
        /// Gets or sets the value of variable varADsupplier.
        /// </summary>
        [TestVariable("7f77093a-3296-4475-afa9-e6d900e8193a")]
        public string varADsupplier
        {
            get { return _varADsupplier; }
            set { _varADsupplier = value; }
        }

        string _varATSsupplier;

        /// <summary>
        /// Gets or sets the value of variable varATSsupplier.
        /// </summary>
        [TestVariable("699b14ac-354a-4cca-94ff-c04a6a244246")]
        public string varATSsupplier
        {
            get { return _varATSsupplier; }
            set { _varATSsupplier = value; }
        }

        string _varNewRFQNumber;

        /// <summary>
        /// Gets or sets the value of variable varNewRFQNumber.
        /// </summary>
        [TestVariable("73df3a02-ad00-47c7-8fbe-1fa442bd7b50")]
        public string varNewRFQNumber
        {
            get { return _varNewRFQNumber; }
            set { _varNewRFQNumber = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            varADsupplier = SPCollection.GetCountofWinner("Winner", "ANCHOR DANLY");
            Delay.Milliseconds(0);
            
            varATSsupplier = SPCollection.GetCountofWinner("Winner", "ATS AUTOMATION1");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.SelectWinners' at Center.", repo.MainWindow.NavigationPanel.SelectWinnersInfo, new RecordItemIndex(2));
            repo.MainWindow.NavigationPanel.SelectWinners.Click();
            Delay.Milliseconds(200);
            
            //GetSplitRFQNum();
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'NotificationsWindow.SplitRFQMessage'", repo.NotificationsWindow.SplitRFQMessageInfo, new ActionTimeout(30000), new RecordItemIndex(4));
            repo.NotificationsWindow.SplitRFQMessageInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'NotificationsWindow.SplitRFQMessage' and assigning the part of its value captured by '\\d+(?!.*\\d+)' to variable 'varNewRFQNumber'.", repo.NotificationsWindow.SplitRFQMessageInfo, new RecordItemIndex(5));
            varNewRFQNumber = repo.NotificationsWindow.SplitRFQMessage.Element.GetAttributeValueText("Text", new Regex("\\d+(?!.*\\d+)"));
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'NotificationsWindow.WinnerHasBeenSelected'", repo.NotificationsWindow.WinnerHasBeenSelectedInfo, new ActionTimeout(30000), new RecordItemIndex(6));
            //repo.NotificationsWindow.WinnerHasBeenSelectedInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 30s.", new RecordItemIndex(7));
            Delay.Duration(30000, false);
            
            SPCollection.WriteReqNumber(varNewRFQNumber, "\\\\ca01a9001\\pgmis\\Deployment_DEV\\Ranorex\\Supplier_Portal\\RFQNumber\\SplitRFQNumber.txt");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
