///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The DownloadAttachments recording.
    /// </summary>
    [TestModule("623ad5dd-d57d-4755-a1a2-4671311b84d1", ModuleType.Recording, 1)]
    public partial class DownloadAttachments : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static DownloadAttachments instance = new DownloadAttachments();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public DownloadAttachments()
        {
            varRFQNumber = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static DownloadAttachments Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable varRFQNumber.
        /// </summary>
        [TestVariable("6fc92989-a35f-4adb-aeee-a84cd1842041")]
        public string varRFQNumber
        {
            get { return repo.varRFQNumber; }
            set { repo.varRFQNumber = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            varRFQNumber = SPCollection.ReadRequisitionFile("\\\\ca01a9001\\pgmis\\Deployment_DEV\\Ranorex\\Supplier_Portal\\RFQNumber\\StaticRFQNumber.txt");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.Search' at Center.", repo.LoginATSSupplierPortal.SearchInfo, new RecordItemIndex(1));
            repo.LoginATSSupplierPortal.Search.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varRFQNumber' with focus on 'LoginATSSupplierPortal.Search'.", repo.LoginATSSupplierPortal.SearchInfo, new RecordItemIndex(2));
            repo.LoginATSSupplierPortal.Search.PressKeys(varRFQNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.SelectRFQNumber' at Center.", repo.LoginATSSupplierPortal.SelectRFQNumberInfo, new RecordItemIndex(3));
            repo.LoginATSSupplierPortal.SelectRFQNumber.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'LoginATSSupplierPortal.BtnSetPromise'", repo.LoginATSSupplierPortal.BtnSetPromiseInfo, new ActionTimeout(10000), new RecordItemIndex(4));
            repo.LoginATSSupplierPortal.BtnSetPromiseInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.BtnDownload' at Center.", repo.LoginATSSupplierPortal.BtnDownloadInfo, new RecordItemIndex(5));
            repo.LoginATSSupplierPortal.BtnDownload.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VendorQuoteATSSupplierPortalInt.Open' at Center.", repo.VendorQuoteATSSupplierPortalInt.OpenInfo, new RecordItemIndex(6));
            repo.VendorQuoteATSSupplierPortalInt.Open.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'ATSRFQZipFolder'", repo.ATSRFQZipFolder.SelfInfo, new ActionTimeout(20000), new RecordItemIndex(7));
            repo.ATSRFQZipFolder.SelfInfo.WaitForExists(20000);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Restore() on item 'ATSRFQZipFolder'.", repo.ATSRFQZipFolder.SelfInfo, new RecordItemIndex(8));
            repo.ATSRFQZipFolder.Self.Restore();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Maximize() on item 'ATSRFQZipFolder'.", repo.ATSRFQZipFolder.SelfInfo, new RecordItemIndex(9));
            repo.ATSRFQZipFolder.Self.Maximize();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(10));
            Delay.Duration(1000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.ATSRFQZipFolder.Self, false, new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(12));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Application", "Closing application containing item 'ATSRFQZipFolder'.", repo.ATSRFQZipFolder.SelfInfo, new RecordItemIndex(13));
            Host.Current.CloseApplication(repo.ATSRFQZipFolder.Self, new Duration(0));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(14));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'LoginATSSupplierPortal.PDF' at LowerLeft.", repo.LoginATSSupplierPortal.PDFInfo, new RecordItemIndex(15));
            repo.LoginATSSupplierPortal.PDF.MoveTo(Location.LowerLeft);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.PDF' at LowerLeft.", repo.LoginATSSupplierPortal.PDFInfo, new RecordItemIndex(16));
            repo.LoginATSSupplierPortal.PDF.Click(Location.LowerLeft);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VendorQuoteATSSupplierPortalInt.Open' at Center.", repo.VendorQuoteATSSupplierPortalInt.OpenInfo, new RecordItemIndex(17));
            repo.VendorQuoteATSSupplierPortalInt.Open.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'AdobeReader'", repo.AdobeReader.SelfInfo, new ActionTimeout(20000), new RecordItemIndex(18));
            repo.AdobeReader.SelfInfo.WaitForExists(20000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'AdobeReader'.", repo.AdobeReader.SelfInfo, new RecordItemIndex(19));
            Validate.Exists(repo.AdobeReader.SelfInfo);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AdobeReader.Self, false, new RecordItemIndex(20));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(21));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Application", "Closing application containing item 'AdobeReader'.", repo.AdobeReader.SelfInfo, new RecordItemIndex(22));
            Host.Current.CloseApplication(repo.AdobeReader.Self, new Duration(0));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
