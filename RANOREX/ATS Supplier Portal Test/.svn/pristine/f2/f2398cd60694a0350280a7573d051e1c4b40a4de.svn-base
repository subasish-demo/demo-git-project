///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BulkModifyReqDate recording.
    /// </summary>
    [TestModule("4cceea6d-c8ac-4cb5-97cd-e9d069a217c7", ModuleType.Recording, 1)]
    public partial class BulkModifyReqDate : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static BulkModifyReqDate instance = new BulkModifyReqDate();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BulkModifyReqDate()
        {
            varRowCount = "";
            varDate = "";
            varColIndex = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BulkModifyReqDate Instance
        {
            get { return instance; }
        }

#region Variables

        string _varRowCount;

        /// <summary>
        /// Gets or sets the value of variable varRowCount.
        /// </summary>
        [TestVariable("126cadd6-6634-462b-96bb-ad69dd1d7315")]
        public string varRowCount
        {
            get { return _varRowCount; }
            set { _varRowCount = value; }
        }

        string _varDate;

        /// <summary>
        /// Gets or sets the value of variable varDate.
        /// </summary>
        [TestVariable("6b008a5d-8fd0-4721-908c-80c73874a9bd")]
        public string varDate
        {
            get { return _varDate; }
            set { _varDate = value; }
        }

        string _varColIndex;

        /// <summary>
        /// Gets or sets the value of variable varColIndex.
        /// </summary>
        [TestVariable("f60dbede-cc1a-4085-9748-2155470c39e6")]
        public string varColIndex
        {
            get { return _varColIndex; }
            set { _varColIndex = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.CreateRFQ' at Center.", repo.MainWindow.NavigationPanel.CreateRFQInfo, new RecordItemIndex(0));
            repo.MainWindow.NavigationPanel.CreateRFQ.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to not exist. Associated repository item: 'MainWindow.BusyOverlay'", repo.MainWindow.BusyOverlayInfo, new ActionTimeout(60000), new RecordItemIndex(1));
            repo.MainWindow.BusyOverlayInfo.WaitForNotExists(60000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.DetailsInBatch' at Center.", repo.MainWindow.NavigationPanel.DetailsInBatchInfo, new RecordItemIndex(2));
            repo.MainWindow.NavigationPanel.DetailsInBatch.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '90000' on item 'MainWindow.NavigationPanel.UserReferenceFilter'.", repo.MainWindow.NavigationPanel.UserReferenceFilterInfo, new RecordItemIndex(3));
            repo.MainWindow.NavigationPanel.UserReferenceFilter.Element.SetAttributeValue("Text", "90000");
            Delay.Milliseconds(0);
            
            varRowCount = ValueConverter.ToString(SPCollection.GetRowCountofTable());
            Delay.Milliseconds(0);
            
            SPCollection.SelectOddRows(ValueConverter.ArgumentFromString<int>("rCount", varRowCount));
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MainWindow.NavigationPanel.tabPageList, false, new RecordItemIndex(6));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.BulkReqDateTextBox' at Center.", repo.MainWindow.NavigationPanel.BulkReqDateTextBoxInfo, new RecordItemIndex(7));
            repo.MainWindow.NavigationPanel.BulkReqDateTextBox.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '' on item 'MainWindow.NavigationPanel.BulkReqDateTextBox'.", repo.MainWindow.NavigationPanel.BulkReqDateTextBoxInfo, new RecordItemIndex(8));
            repo.MainWindow.NavigationPanel.BulkReqDateTextBox.Element.SetAttributeValue("Text", "");
            Delay.Milliseconds(0);
            
            varDate = SPCollection.GetDateTimePlusXDays(ValueConverter.ArgumentFromString<int>("days", "3"));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '$varDate' on item 'MainWindow.NavigationPanel.BulkReqDateTextBox'.", repo.MainWindow.NavigationPanel.BulkReqDateTextBoxInfo, new RecordItemIndex(10));
            repo.MainWindow.NavigationPanel.BulkReqDateTextBox.Element.SetAttributeValue("Text", varDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(11));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.NavigationPanel.ApplyToSelected' at Center.", repo.MainWindow.NavigationPanel.ApplyToSelectedInfo, new RecordItemIndex(12));
            repo.MainWindow.NavigationPanel.ApplyToSelected.Click();
            Delay.Milliseconds(200);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MainWindow.NavigationPanel.BulkReqDateTextBox, false, new RecordItemIndex(13));
            
            varColIndex = ValueConverter.ToString(SPCollection.GetColumnIndexofHeader("Required Date"));
            Delay.Milliseconds(0);
            
            SPCollection.ValidateRequiredDateOddRows(ValueConverter.ArgumentFromString<int>("rCount", varRowCount), ValueConverter.ArgumentFromString<int>("colIndex", varColIndex), varDate);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.MainWindow.NavigationPanel.tabPageList, false, new RecordItemIndex(16));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
