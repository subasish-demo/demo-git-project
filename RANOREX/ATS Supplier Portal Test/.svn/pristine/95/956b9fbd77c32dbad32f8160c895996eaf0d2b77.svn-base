///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;
using System.IO;
using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace ATS_Supplier_Portal_Test
{
    public partial class SelectWinners
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void GetSplitRFQNum()
        {
        	bool flag = false;
        	if (repo.NotificationsWindow.SplitRFQMessageInfo.Exists(Duration.FromMilliseconds(30000)) || repo.NotificationsWindow.WinnerHasBeenSelectedInfo.Exists(Duration.FromMilliseconds(30000)))
        	{
        		Report.Info("Found Split RFQ Message or Winner has been selected Notification");
        		if(repo.NotificationsWindow.SplitRFQMessageInfo.Exists())
        		{
        			Report.Info("Found Split RFQ Message getting New RFQ Number");
        			varNewRFQNumber = repo.NotificationsWindow.SplitRFQMessage.Element.GetAttributeValueText("Text", new Regex("\\d+(?!.*\\d+)"));
        			flag = true;
        			Report.Info("RFQNumber: " + varNewRFQNumber);
        		}
        		else if(repo.NotificationsWindow.WinnerHasBeenSelectedInfo.Exists() && !flag)
        		{
        			Report.Info("Found Winner has been selected Notification, waiting 30 seconds for Split RFQ Message...");
        			repo.NotificationsWindow.SplitRFQMessageInfo.WaitForExists(30000);
        			varNewRFQNumber = repo.NotificationsWindow.SplitRFQMessage.Element.GetAttributeValueText("Text", new Regex("\\d+(?!.*\\d+)"));
        			flag = true;
        		}
        	}
        	if (flag)
        	{
        		Delay.Seconds(10.0);
        		Report.Info("Writing SplitRFQ Number: " + varNewRFQNumber + " to file");
        		SPCollection.WriteReqNumber(varNewRFQNumber,@"\\ca01a9001\pgmis\Deployment_DEV\Ranorex\Supplier_Portal\RFQNumber\SplitRFQNumber.txt");
        	}
        }

    }
}
