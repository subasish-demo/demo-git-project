///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ATS_Supplier_Portal_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FilterPOs recording.
    /// </summary>
    [TestModule("ddb6f33a-3bc7-42db-9ce5-6398b871d351", ModuleType.Recording, 1)]
    public partial class FilterPOs : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ATS_Supplier_Portal_TestRepository repository.
        /// </summary>
        public static ATS_Supplier_Portal_TestRepository repo = ATS_Supplier_Portal_TestRepository.Instance;

        static FilterPOs instance = new FilterPOs();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FilterPOs()
        {
            varNumRecords = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FilterPOs Instance
        {
            get { return instance; }
        }

#region Variables

        string _varNumRecords;

        /// <summary>
        /// Gets or sets the value of variable varNumRecords.
        /// </summary>
        [TestVariable("2996a7d0-af65-4e31-b472-2647179e5dea")]
        public string varNumRecords
        {
            get { return _varNumRecords; }
            set { _varNumRecords = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 5m to exist. Associated repository item: 'LoginATSSupplierPortal.Search1'", repo.LoginATSSupplierPortal.Search1Info, new ActionTimeout(300000), new RecordItemIndex(0));
            repo.LoginATSSupplierPortal.Search1Info.WaitForExists(300000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 3m to not exist. Associated repository item: 'RFQListingATSSupplierPortal.Loading'", repo.RFQListingATSSupplierPortal.LoadingInfo, new ActionTimeout(180000), new RecordItemIndex(1));
            repo.RFQListingATSSupplierPortal.LoadingInfo.WaitForNotExists(180000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(2));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.RFQListing' at Center.", repo.LoginATSSupplierPortal.RFQListingInfo, new RecordItemIndex(3));
            repo.LoginATSSupplierPortal.RFQListing.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageDown}{PageDown}{PageDown}'.", new RecordItemIndex(4));
            Keyboard.Press("{PageDown}{PageDown}{PageDown}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.DropDownPO' at Center.", repo.LoginATSSupplierPortal.DropDownPOInfo, new RecordItemIndex(5));
            repo.LoginATSSupplierPortal.DropDownPO.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.Open1' at Center.", repo.LoginATSSupplierPortal.Open1Info, new RecordItemIndex(6));
            repo.LoginATSSupplierPortal.Open1.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(7));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.OpenPOListing' at Center.", repo.LoginATSSupplierPortal.OpenPOListingInfo, new RecordItemIndex(8));
            repo.LoginATSSupplierPortal.OpenPOListing.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageDown}{PageDown}{PageDown}'.", new RecordItemIndex(9));
            Keyboard.Press("{PageDown}{PageDown}{PageDown}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'LoginATSSupplierPortal.PosTableInfo' and assigning the part of its value captured by '(?<=\\w+\\s\\d+\\sto\\s)\\d+' to variable 'varNumRecords'.", repo.LoginATSSupplierPortal.PosTableInfoInfo, new RecordItemIndex(10));
            varNumRecords = repo.LoginATSSupplierPortal.PosTableInfo.Element.GetAttributeValueText("InnerText", new Regex("(?<=\\w+\\s\\d+\\sto\\s)\\d+"));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", varNumRecords, new RecordItemIndex(11));
            
            ValidateStatusColumn("Open");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot of Open/Rejected", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(13));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.DropDownPO' at Center.", repo.LoginATSSupplierPortal.DropDownPOInfo, new RecordItemIndex(14));
            repo.LoginATSSupplierPortal.DropDownPO.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.ActionRequired' at Center.", repo.LoginATSSupplierPortal.ActionRequiredInfo, new RecordItemIndex(15));
            repo.LoginATSSupplierPortal.ActionRequired.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(16));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.OpenPOListing' at Center.", repo.LoginATSSupplierPortal.OpenPOListingInfo, new RecordItemIndex(17));
            repo.LoginATSSupplierPortal.OpenPOListing.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageDown}{PageDown}{PageDown}'.", new RecordItemIndex(18));
            Keyboard.Press("{PageDown}{PageDown}{PageDown}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'LoginATSSupplierPortal.PosTableInfo' and assigning the part of its value captured by '(?<=\\w+\\s\\d+\\sto\\s)\\d+' to variable 'varNumRecords'.", repo.LoginATSSupplierPortal.PosTableInfoInfo, new RecordItemIndex(19));
            varNumRecords = repo.LoginATSSupplierPortal.PosTableInfo.Element.GetAttributeValueText("InnerText", new Regex("(?<=\\w+\\s\\d+\\sto\\s)\\d+"));
            Delay.Milliseconds(0);
            
            ValidateStatusColumn("Action Required");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot of Action Required", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.DropDownPO' at Center.", repo.LoginATSSupplierPortal.DropDownPOInfo, new RecordItemIndex(22));
            repo.LoginATSSupplierPortal.DropDownPO.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.Pending' at Center.", repo.LoginATSSupplierPortal.PendingInfo, new RecordItemIndex(23));
            repo.LoginATSSupplierPortal.Pending.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(24));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.OpenPOListing' at Center.", repo.LoginATSSupplierPortal.OpenPOListingInfo, new RecordItemIndex(25));
            repo.LoginATSSupplierPortal.OpenPOListing.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageDown}{PageDown}{PageDown}'.", new RecordItemIndex(26));
            Keyboard.Press("{PageDown}{PageDown}{PageDown}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'LoginATSSupplierPortal.PosTableInfo' and assigning the part of its value captured by '(?<=\\w+\\s\\d+\\sto\\s)\\d+' to variable 'varNumRecords'.", repo.LoginATSSupplierPortal.PosTableInfoInfo, new RecordItemIndex(27));
            varNumRecords = repo.LoginATSSupplierPortal.PosTableInfo.Element.GetAttributeValueText("InnerText", new Regex("(?<=\\w+\\s\\d+\\sto\\s)\\d+"));
            Delay.Milliseconds(0);
            
            ValidateStatusColumn("Pending");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot of Pending", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(29));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.DropDownPO' at Center.", repo.LoginATSSupplierPortal.DropDownPOInfo, new RecordItemIndex(30));
            repo.LoginATSSupplierPortal.DropDownPO.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.ApprovedConfirmed' at Center.", repo.LoginATSSupplierPortal.ApprovedConfirmedInfo, new RecordItemIndex(31));
            repo.LoginATSSupplierPortal.ApprovedConfirmed.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(32));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginATSSupplierPortal.OpenPOListing' at Center.", repo.LoginATSSupplierPortal.OpenPOListingInfo, new RecordItemIndex(33));
            repo.LoginATSSupplierPortal.OpenPOListing.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{PageDown}{PageDown}{PageDown}'.", new RecordItemIndex(34));
            Keyboard.Press("{PageDown}{PageDown}{PageDown}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'LoginATSSupplierPortal.PosTableInfo' and assigning the part of its value captured by '(?<=\\w+\\s\\d+\\sto\\s)\\d+' to variable 'varNumRecords'.", repo.LoginATSSupplierPortal.PosTableInfoInfo, new RecordItemIndex(35));
            varNumRecords = repo.LoginATSSupplierPortal.PosTableInfo.Element.GetAttributeValueText("InnerText", new Regex("(?<=\\w+\\s\\d+\\sto\\s)\\d+"));
            Delay.Milliseconds(0);
            
            ValidateStatusColumn("Approved Confirmed Shipped");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot of Approved/Confirmed", repo.LoginATSSupplierPortal.Self, false, new RecordItemIndex(37));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
